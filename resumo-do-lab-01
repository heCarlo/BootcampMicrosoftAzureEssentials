# Resumo do Lab01 do Bootcamp Azure Essentials - DIO

## 1. Introdução ao Azure Essentials com a Microsoft
Nesse módulo inicial, tivemos uma visão geral do **Microsoft Azure**, a plataforma de nuvem da Microsoft. Foram apresentados os serviços principais, como computação, armazenamento e redes, e discutido como essas soluções podem ajudar a gerenciar, implantar e escalar aplicativos na nuvem. Foi uma boa introdução para entender os fundamentos da infraestrutura em nuvem e como gerenciar recursos com eficiência.

## 2. Introdução à Computação em Nuvem
Aqui, conhecemos os conceitos básicos da **computação em nuvem**. Exploramos os tipos de nuvem (pública, privada e híbrida) e os modelos de serviço, como **IaaS**, **PaaS** e **SaaS**. O foco foi em como a nuvem traz vantagens como escalabilidade, flexibilidade e redução de custos em relação aos métodos tradicionais de TI.

## 3. Introdução ao Versionamento de Código com Git e GitHub
Esse conteúdo nos ensinou a usar o **Git**, uma ferramenta de controle de versão muito utilizada para gerenciar projetos de software. Também aprendemos a utilizar o **GitHub**, uma plataforma que hospeda repositórios Git e facilita a colaboração em projetos. Vimos como criar repositórios, fazer commits, trabalhar com branches e colaborar em projetos de código aberto através de **pull requests** e revisões de código.

## 4. Desafio: Contribuindo em um Projeto Open Source no GitHub
No desafio prático, colocamos em prática o que aprendemos sobre GitHub, contribuindo para um projeto open source. Entre os tópicos abordados estão:

- **Open Source**: Entendemos o que é a filosofia de código aberto e por que ela é tão importante para o desenvolvimento colaborativo.
- **Licenças de Código Aberto**: Aprendemos sobre as licenças que definem como o código pode ser usado e compartilhado.
- **Issues**: Descobrimos como relatar e resolver problemas dentro de um projeto open source, usando o sistema de issues.
- **Padrão de Commits**: Vimos a importância de escrever mensagens de commit claras e organizadas.
- **Template para Issues**: Criamos templates para padronizar a abertura de issues, facilitando a colaboração no projeto.
- **Fork e Configuração de Remote Upstream**: Praticamos o processo de fazer um fork de um repositório, manter o código atualizado com o repositório original e contribuir de volta para o projeto principal.
- **Criação do README.md**: Discutimos a importância de documentar bem o projeto, explicando de forma clara o propósito e como utilizá-lo.

No final, compartilhamos o link para o repositório do desafio no GitHub.
